// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: homework_service.proto

package homework_protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Definition of Homework message
type Homework struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                   // Unique ID for the homework
	CourseId    string        `protobuf:"bytes,2,opt,name=courseId,proto3" json:"courseId,omitempty"`       // ID of the course the homework belongs to
	Title       string        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`             // Title of the homework
	Description string        `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // Description of the homework
	Files       []*File       `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`             // Associated files for the homework
	Workflow    string        `protobuf:"bytes,6,opt,name=workflow,proto3" json:"workflow,omitempty"`       // Workflow instructions for completing the homework
	DueDate     string        `protobuf:"bytes,7,opt,name=dueDate,proto3" json:"dueDate,omitempty"`         // Due date of the homework
	Submissions []*Submission `protobuf:"bytes,8,rep,name=submissions,proto3" json:"submissions,omitempty"` // Submissions for this homework
}

func (x *Homework) Reset() {
	*x = Homework{}
	mi := &file_homework_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Homework) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Homework) ProtoMessage() {}

func (x *Homework) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Homework.ProtoReflect.Descriptor instead.
func (*Homework) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{0}
}

func (x *Homework) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Homework) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *Homework) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Homework) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Homework) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Homework) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *Homework) GetDueDate() string {
	if x != nil {
		return x.DueDate
	}
	return ""
}

func (x *Homework) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

//Defining core types for the homework service:
//this message is used to represent Files in the homework
type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Content  []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	MimeType string `protobuf:"bytes,3,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_homework_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{1}
}

func (x *File) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *File) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *File) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

//this message is used to represent the new added feature workflows
type Workflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steps []string `protobuf:"bytes,1,rep,name=steps,proto3" json:"steps,omitempty"` //could be changed
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	mi := &file_homework_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{2}
}

func (x *Workflow) GetSteps() []string {
	if x != nil {
		return x.Steps
	}
	return nil
}

//this message is used to represent student Submissions
type Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId      string   `protobuf:"bytes,1,opt,name=studentId,proto3" json:"studentId,omitempty"`
	SubmissionTime string   `protobuf:"bytes,2,opt,name=submissionTime,proto3" json:"submissionTime,omitempty"`
	SubmissionFile *File    `protobuf:"bytes,3,opt,name=submissionFile,proto3" json:"submissionFile,omitempty"`
	PartnersId     []string `protobuf:"bytes,6,rep,name=partnersId,proto3" json:"partnersId,omitempty"`
}

func (x *Submission) Reset() {
	*x = Submission{}
	mi := &file_homework_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submission) ProtoMessage() {}

func (x *Submission) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submission.ProtoReflect.Descriptor instead.
func (*Submission) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{3}
}

func (x *Submission) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *Submission) GetSubmissionTime() string {
	if x != nil {
		return x.SubmissionTime
	}
	return ""
}

func (x *Submission) GetSubmissionFile() *File {
	if x != nil {
		return x.SubmissionFile
	}
	return nil
}

func (x *Submission) GetPartnersId() []string {
	if x != nil {
		return x.PartnersId
	}
	return nil
}

//request message for getting homework containing the course id
type GetHomeworkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId string `protobuf:"bytes,1,opt,name=courseId,proto3" json:"courseId,omitempty"`
}

func (x *GetHomeworkRequest) Reset() {
	*x = GetHomeworkRequest{}
	mi := &file_homework_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHomeworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeworkRequest) ProtoMessage() {}

func (x *GetHomeworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeworkRequest.ProtoReflect.Descriptor instead.
func (*GetHomeworkRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetHomeworkRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

//response message containing the  for said course
type GetHomeworkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hw []*Homework `protobuf:"bytes,1,rep,name=Hw,proto3" json:"Hw,omitempty"`
}

func (x *GetHomeworkResponse) Reset() {
	*x = GetHomeworkResponse{}
	mi := &file_homework_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHomeworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeworkResponse) ProtoMessage() {}

func (x *GetHomeworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeworkResponse.ProtoReflect.Descriptor instead.
func (*GetHomeworkResponse) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetHomeworkResponse) GetHw() []*Homework {
	if x != nil {
		return x.Hw
	}
	return nil
}

//request message for creating new homework
type CreateHomeworkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId    string        `protobuf:"bytes,1,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Title       string        `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Description string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	HwFile      []*File       `protobuf:"bytes,4,rep,name=HwFile,proto3" json:"HwFile,omitempty"`
	Workflow    *Workflow     `protobuf:"bytes,5,opt,name=workflow,proto3" json:"workflow,omitempty"`
	DueDate     string        `protobuf:"bytes,6,opt,name=dueDate,proto3" json:"dueDate,omitempty"`
	Submission  []*Submission `protobuf:"bytes,7,rep,name=submission,proto3" json:"submission,omitempty"`
}

func (x *CreateHomeworkRequest) Reset() {
	*x = CreateHomeworkRequest{}
	mi := &file_homework_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHomeworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHomeworkRequest) ProtoMessage() {}

func (x *CreateHomeworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHomeworkRequest.ProtoReflect.Descriptor instead.
func (*CreateHomeworkRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateHomeworkRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *CreateHomeworkRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateHomeworkRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateHomeworkRequest) GetHwFile() []*File {
	if x != nil {
		return x.HwFile
	}
	return nil
}

func (x *CreateHomeworkRequest) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *CreateHomeworkRequest) GetDueDate() string {
	if x != nil {
		return x.DueDate
	}
	return ""
}

func (x *CreateHomeworkRequest) GetSubmission() []*Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

//boolean response to give feedback incase the function failed
type CreateHomeworkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Res bool `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"`
}

func (x *CreateHomeworkResponse) Reset() {
	*x = CreateHomeworkResponse{}
	mi := &file_homework_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHomeworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHomeworkResponse) ProtoMessage() {}

func (x *CreateHomeworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHomeworkResponse.ProtoReflect.Descriptor instead.
func (*CreateHomeworkResponse) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateHomeworkResponse) GetRes() bool {
	if x != nil {
		return x.Res
	}
	return false
}

var File_homework_service_proto protoreflect.FileDescriptor

var file_homework_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x22, 0x82, 0x02, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x36, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x58, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x20, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x65, 0x70, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x49, 0x64,
	0x22, 0x30, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x22, 0x39, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x02, 0x48, 0x77, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x02, 0x48, 0x77, 0x22, 0x93, 0x02,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x48,
	0x77, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x48, 0x77, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x72, 0x65, 0x73, 0x32,
	0xb2, 0x01, 0x0a, 0x0f, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x1c, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x53, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x1f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x42, 0x65, 0x74, 0x74, 0x65, 0x72, 0x47, 0x52, 0x2f, 0x68, 0x6f, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_homework_service_proto_rawDescOnce sync.Once
	file_homework_service_proto_rawDescData = file_homework_service_proto_rawDesc
)

func file_homework_service_proto_rawDescGZIP() []byte {
	file_homework_service_proto_rawDescOnce.Do(func() {
		file_homework_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_homework_service_proto_rawDescData)
	})
	return file_homework_service_proto_rawDescData
}

var file_homework_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_homework_service_proto_goTypes = []any{
	(*Homework)(nil),               // 0: Homework.Homework
	(*File)(nil),                   // 1: Homework.File
	(*Workflow)(nil),               // 2: Homework.Workflow
	(*Submission)(nil),             // 3: Homework.Submission
	(*GetHomeworkRequest)(nil),     // 4: Homework.GetHomeworkRequest
	(*GetHomeworkResponse)(nil),    // 5: Homework.GetHomeworkResponse
	(*CreateHomeworkRequest)(nil),  // 6: Homework.CreateHomeworkRequest
	(*CreateHomeworkResponse)(nil), // 7: Homework.CreateHomeworkResponse
}
var file_homework_service_proto_depIdxs = []int32{
	1, // 0: Homework.Homework.files:type_name -> Homework.File
	3, // 1: Homework.Homework.submissions:type_name -> Homework.Submission
	1, // 2: Homework.Submission.submissionFile:type_name -> Homework.File
	0, // 3: Homework.GetHomeworkResponse.Hw:type_name -> Homework.Homework
	1, // 4: Homework.CreateHomeworkRequest.HwFile:type_name -> Homework.File
	2, // 5: Homework.CreateHomeworkRequest.workflow:type_name -> Homework.Workflow
	3, // 6: Homework.CreateHomeworkRequest.submission:type_name -> Homework.Submission
	4, // 7: Homework.HomeworkService.GetHomework:input_type -> Homework.GetHomeworkRequest
	6, // 8: Homework.HomeworkService.CreateHomework:input_type -> Homework.CreateHomeworkRequest
	5, // 9: Homework.HomeworkService.GetHomework:output_type -> Homework.GetHomeworkResponse
	7, // 10: Homework.HomeworkService.CreateHomework:output_type -> Homework.CreateHomeworkResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_homework_service_proto_init() }
func file_homework_service_proto_init() {
	if File_homework_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_homework_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_homework_service_proto_goTypes,
		DependencyIndexes: file_homework_service_proto_depIdxs,
		MessageInfos:      file_homework_service_proto_msgTypes,
	}.Build()
	File_homework_service_proto = out.File
	file_homework_service_proto_rawDesc = nil
	file_homework_service_proto_goTypes = nil
	file_homework_service_proto_depIdxs = nil
}
