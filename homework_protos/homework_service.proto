syntax = "proto3";

option go_package ="github.com/BetterGR/homework-microservice/homework_protos";

package Homework;
/*
The Homework domain manages all information related to assignments for each course,
including workflows for completing homework, submission tracking
 */
service HomeworkService{
    //returns all the homework assigned in a certain course
    rpc GetHomework(GetHomeworkRequest) returns (GetHomeworkResponse);
    //creates a new homework for a certain course and returns boolean response
    rpc CreateHomework(CreateHomeworkRequest) returns (CreateHomeworkResponse);
}


// Definition of Homework message
message Homework {
    string id = 1;                // Unique ID for the homework
    string courseId = 2;          // ID of the course the homework belongs to
    string title = 3;             // Title of the homework
    string description = 4;       // Description of the homework
    repeated File files = 5;      // Associated files for the homework
    string workflow = 6;        // Workflow instructions for completing the homework
    string dueDate = 7;           // Due date of the homework
    repeated Submission submissions = 8; // Submissions for this homework
}
//Defining core types for the homework service:
//this message is used to represent Files in the homework
message File {
    string filename = 1;       
    bytes content = 2;         
    string mimeType = 3;       
}
//this message is used to represent the new added feature workflows
message Workflow {
    repeated string steps = 1; //could be changed
}
//this message is used to represent student Submissions
message Submission {
    string studentId = 1;       
    string submissionTime = 2;  
    File submissionFile = 3;                     
    repeated string partnersId = 6; 
}


//request message for getting homework containing the course id
message GetHomeworkRequest{
    string courseId = 1;
}
//response message containing the  for said course
message GetHomeworkResponse{
    repeated Homework Hw = 1;
}


//request message for creating new homework
message CreateHomeworkRequest{
    string courseId = 1;
    string Title = 2;
    string description = 3;
    repeated File HwFile = 4;
    Workflow workflow = 5;
    string dueDate = 6;
    repeated Submission submission = 7;
}
//boolean response to give feedback incase the function failed
message CreateHomeworkResponse{
    bool res = 1;
}