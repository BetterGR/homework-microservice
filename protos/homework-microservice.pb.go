// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.28.3
// source: homework-microservice.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for getting homework containing the course id.
type GetHomeworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHomeworkRequest) Reset() {
	*x = GetHomeworkRequest{}
	mi := &file_homework_microservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHomeworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeworkRequest) ProtoMessage() {}

func (x *GetHomeworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeworkRequest.ProtoReflect.Descriptor instead.
func (*GetHomeworkRequest) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{0}
}

func (x *GetHomeworkRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetHomeworkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message containing the homework for said course.
type GetHomeworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hw            *Homework              `protobuf:"bytes,1,opt,name=hw,proto3" json:"hw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHomeworkResponse) Reset() {
	*x = GetHomeworkResponse{}
	mi := &file_homework_microservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHomeworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeworkResponse) ProtoMessage() {}

func (x *GetHomeworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeworkResponse.ProtoReflect.Descriptor instead.
func (*GetHomeworkResponse) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetHomeworkResponse) GetHw() *Homework {
	if x != nil {
		return x.Hw
	}
	return nil
}

// Request message for creating new homework.
type CreateHomeworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Homework      *Homework              `protobuf:"bytes,2,opt,name=homework,proto3" json:"homework,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateHomeworkRequest) Reset() {
	*x = CreateHomeworkRequest{}
	mi := &file_homework_microservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHomeworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHomeworkRequest) ProtoMessage() {}

func (x *CreateHomeworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHomeworkRequest.ProtoReflect.Descriptor instead.
func (*CreateHomeworkRequest) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{2}
}

func (x *CreateHomeworkRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreateHomeworkRequest) GetHomework() *Homework {
	if x != nil {
		return x.Homework
	}
	return nil
}

// Boolean response to give feedback in case the function failed.
type CreateHomeworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hw            *Homework              `protobuf:"bytes,1,opt,name=hw,proto3" json:"hw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateHomeworkResponse) Reset() {
	*x = CreateHomeworkResponse{}
	mi := &file_homework_microservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHomeworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHomeworkResponse) ProtoMessage() {}

func (x *CreateHomeworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHomeworkResponse.ProtoReflect.Descriptor instead.
func (*CreateHomeworkResponse) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{3}
}

func (x *CreateHomeworkResponse) GetHw() *Homework {
	if x != nil {
		return x.Hw
	}
	return nil
}

// Request message for updating a homework.
type UpdateHomeworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Homework      *Homework              `protobuf:"bytes,2,opt,name=homework,proto3" json:"homework,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateHomeworkRequest) Reset() {
	*x = UpdateHomeworkRequest{}
	mi := &file_homework_microservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHomeworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeworkRequest) ProtoMessage() {}

func (x *UpdateHomeworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeworkRequest.ProtoReflect.Descriptor instead.
func (*UpdateHomeworkRequest) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateHomeworkRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdateHomeworkRequest) GetHomework() *Homework {
	if x != nil {
		return x.Homework
	}
	return nil
}

// Response message for updating a homework.
type UpdateHomeworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hw            *Homework              `protobuf:"bytes,1,opt,name=hw,proto3" json:"hw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateHomeworkResponse) Reset() {
	*x = UpdateHomeworkResponse{}
	mi := &file_homework_microservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHomeworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomeworkResponse) ProtoMessage() {}

func (x *UpdateHomeworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomeworkResponse.ProtoReflect.Descriptor instead.
func (*UpdateHomeworkResponse) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateHomeworkResponse) GetHw() *Homework {
	if x != nil {
		return x.Hw
	}
	return nil
}

// Request message for deleting a homework.
type DeleteHomeworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteHomeworkRequest) Reset() {
	*x = DeleteHomeworkRequest{}
	mi := &file_homework_microservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteHomeworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeworkRequest) ProtoMessage() {}

func (x *DeleteHomeworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeworkRequest.ProtoReflect.Descriptor instead.
func (*DeleteHomeworkRequest) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteHomeworkRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DeleteHomeworkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for deleting a homework.
type DeleteHomeworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteHomeworkResponse) Reset() {
	*x = DeleteHomeworkResponse{}
	mi := &file_homework_microservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteHomeworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHomeworkResponse) ProtoMessage() {}

func (x *DeleteHomeworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHomeworkResponse.ProtoReflect.Descriptor instead.
func (*DeleteHomeworkResponse) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{7}
}

// Request message for submitting a homework.
type SubmitHomeworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Submission    *Submission            `protobuf:"bytes,3,opt,name=submission,proto3" json:"submission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitHomeworkRequest) Reset() {
	*x = SubmitHomeworkRequest{}
	mi := &file_homework_microservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitHomeworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitHomeworkRequest) ProtoMessage() {}

func (x *SubmitHomeworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitHomeworkRequest.ProtoReflect.Descriptor instead.
func (*SubmitHomeworkRequest) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{8}
}

func (x *SubmitHomeworkRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SubmitHomeworkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubmitHomeworkRequest) GetSubmission() *Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

// Response message for submitting a homework.
type SubmitHomeworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submission    *Submission            `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitHomeworkResponse) Reset() {
	*x = SubmitHomeworkResponse{}
	mi := &file_homework_microservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitHomeworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitHomeworkResponse) ProtoMessage() {}

func (x *SubmitHomeworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitHomeworkResponse.ProtoReflect.Descriptor instead.
func (*SubmitHomeworkResponse) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{9}
}

func (x *SubmitHomeworkResponse) GetSubmission() *Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

// Request message to retrieve all submissions for a homework.
type GetSubmissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	HomeworkId    string                 `protobuf:"bytes,2,opt,name=homeworkId,proto3" json:"homeworkId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubmissionsRequest) Reset() {
	*x = GetSubmissionsRequest{}
	mi := &file_homework_microservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubmissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionsRequest) ProtoMessage() {}

func (x *GetSubmissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionsRequest.ProtoReflect.Descriptor instead.
func (*GetSubmissionsRequest) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{10}
}

func (x *GetSubmissionsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetSubmissionsRequest) GetHomeworkId() string {
	if x != nil {
		return x.HomeworkId
	}
	return ""
}

// Response message containing all submissions for a homework.
type GetSubmissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submissions   []*Submission          `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubmissionsResponse) Reset() {
	*x = GetSubmissionsResponse{}
	mi := &file_homework_microservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubmissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionsResponse) ProtoMessage() {}

func (x *GetSubmissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionsResponse.ProtoReflect.Descriptor instead.
func (*GetSubmissionsResponse) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{11}
}

func (x *GetSubmissionsResponse) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

// Request message for getting submissions of a specific student.
type GetStudentSubmissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	StudentId     string                 `protobuf:"bytes,2,opt,name=studentId,proto3" json:"studentId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStudentSubmissionsRequest) Reset() {
	*x = GetStudentSubmissionsRequest{}
	mi := &file_homework_microservice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentSubmissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentSubmissionsRequest) ProtoMessage() {}

func (x *GetStudentSubmissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentSubmissionsRequest.ProtoReflect.Descriptor instead.
func (*GetStudentSubmissionsRequest) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{12}
}

func (x *GetStudentSubmissionsRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetStudentSubmissionsRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

// Response message containing all submissions of a specific student.
type GetStudentSubmissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submissions   []*Submission          `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStudentSubmissionsResponse) Reset() {
	*x = GetStudentSubmissionsResponse{}
	mi := &file_homework_microservice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentSubmissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentSubmissionsResponse) ProtoMessage() {}

func (x *GetStudentSubmissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentSubmissionsResponse.ProtoReflect.Descriptor instead.
func (*GetStudentSubmissionsResponse) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{13}
}

func (x *GetStudentSubmissionsResponse) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

// Message representing Homework details.
type Homework struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CourseId      string                 `protobuf:"bytes,3,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Files         []*File                `protobuf:"bytes,6,rep,name=files,proto3" json:"files,omitempty"`
	Workflow      string                 `protobuf:"bytes,7,opt,name=workflow,proto3" json:"workflow,omitempty"`
	DueDate       string                 `protobuf:"bytes,8,opt,name=dueDate,proto3" json:"dueDate,omitempty"`
	Submissions   []*Submission          `protobuf:"bytes,9,rep,name=submissions,proto3" json:"submissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Homework) Reset() {
	*x = Homework{}
	mi := &file_homework_microservice_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Homework) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Homework) ProtoMessage() {}

func (x *Homework) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Homework.ProtoReflect.Descriptor instead.
func (*Homework) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{14}
}

func (x *Homework) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Homework) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Homework) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *Homework) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Homework) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Homework) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Homework) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *Homework) GetDueDate() string {
	if x != nil {
		return x.DueDate
	}
	return ""
}

func (x *Homework) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

// Message representing a File.
type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	MimeType      string                 `protobuf:"bytes,4,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_homework_microservice_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{15}
}

func (x *File) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *File) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *File) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *File) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

// Message representing the workflow.
type Workflow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Steps         []string               `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	mi := &file_homework_microservice_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{16}
}

func (x *Workflow) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Workflow) GetSteps() []string {
	if x != nil {
		return x.Steps
	}
	return nil
}

// Message representing a student Submission.
type Submission struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Token          string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	StudentId      string                 `protobuf:"bytes,2,opt,name=studentId,proto3" json:"studentId,omitempty"`
	SubmissionTime string                 `protobuf:"bytes,3,opt,name=submissionTime,proto3" json:"submissionTime,omitempty"`
	SubmissionFile *File                  `protobuf:"bytes,4,opt,name=submissionFile,proto3" json:"submissionFile,omitempty"`
	PartnersId     []string               `protobuf:"bytes,5,rep,name=partnersId,proto3" json:"partnersId,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Submission) Reset() {
	*x = Submission{}
	mi := &file_homework_microservice_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submission) ProtoMessage() {}

func (x *Submission) ProtoReflect() protoreflect.Message {
	mi := &file_homework_microservice_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submission.ProtoReflect.Descriptor instead.
func (*Submission) Descriptor() ([]byte, []int) {
	return file_homework_microservice_proto_rawDescGZIP(), []int{17}
}

func (x *Submission) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Submission) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *Submission) GetSubmissionTime() string {
	if x != nil {
		return x.SubmissionTime
	}
	return ""
}

func (x *Submission) GetSubmissionFile() *File {
	if x != nil {
		return x.SubmissionFile
	}
	return nil
}

func (x *Submission) GetPartnersId() []string {
	if x != nil {
		return x.PartnersId
	}
	return nil
}

var File_homework_microservice_proto protoreflect.FileDescriptor

var file_homework_microservice_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x48,
	0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x3a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x02, 0x68, 0x77,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x02, 0x68, 0x77, 0x22, 0x5d,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a,
	0x08, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x3c, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x02, 0x68, 0x77, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x02, 0x68, 0x77, 0x22, 0x5d, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x68, 0x6f,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x3c, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x02, 0x68, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x48, 0x6f, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x02, 0x68, 0x77, 0x22, 0x3d, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x73, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x52, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x98, 0x02, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x48, 0x6f, 0x6d,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x6e, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x36, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x48, 0x6f, 0x6d,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x49, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x49, 0x64, 0x32, 0xdc, 0x02, 0x0a, 0x0f, 0x48,
	0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1c, 0x2e,
	0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1f, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x53, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x1f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1f, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x42, 0x65, 0x74, 0x74, 0x65, 0x72, 0x47, 0x52,
	0x2f, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_homework_microservice_proto_rawDescOnce sync.Once
	file_homework_microservice_proto_rawDescData = file_homework_microservice_proto_rawDesc
)

func file_homework_microservice_proto_rawDescGZIP() []byte {
	file_homework_microservice_proto_rawDescOnce.Do(func() {
		file_homework_microservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_homework_microservice_proto_rawDescData)
	})
	return file_homework_microservice_proto_rawDescData
}

var file_homework_microservice_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_homework_microservice_proto_goTypes = []any{
	(*GetHomeworkRequest)(nil),            // 0: Homework.GetHomeworkRequest
	(*GetHomeworkResponse)(nil),           // 1: Homework.GetHomeworkResponse
	(*CreateHomeworkRequest)(nil),         // 2: Homework.CreateHomeworkRequest
	(*CreateHomeworkResponse)(nil),        // 3: Homework.CreateHomeworkResponse
	(*UpdateHomeworkRequest)(nil),         // 4: Homework.UpdateHomeworkRequest
	(*UpdateHomeworkResponse)(nil),        // 5: Homework.UpdateHomeworkResponse
	(*DeleteHomeworkRequest)(nil),         // 6: Homework.DeleteHomeworkRequest
	(*DeleteHomeworkResponse)(nil),        // 7: Homework.DeleteHomeworkResponse
	(*SubmitHomeworkRequest)(nil),         // 8: Homework.SubmitHomeworkRequest
	(*SubmitHomeworkResponse)(nil),        // 9: Homework.SubmitHomeworkResponse
	(*GetSubmissionsRequest)(nil),         // 10: Homework.GetSubmissionsRequest
	(*GetSubmissionsResponse)(nil),        // 11: Homework.GetSubmissionsResponse
	(*GetStudentSubmissionsRequest)(nil),  // 12: Homework.GetStudentSubmissionsRequest
	(*GetStudentSubmissionsResponse)(nil), // 13: Homework.GetStudentSubmissionsResponse
	(*Homework)(nil),                      // 14: Homework.Homework
	(*File)(nil),                          // 15: Homework.File
	(*Workflow)(nil),                      // 16: Homework.Workflow
	(*Submission)(nil),                    // 17: Homework.Submission
}
var file_homework_microservice_proto_depIdxs = []int32{
	14, // 0: Homework.GetHomeworkResponse.hw:type_name -> Homework.Homework
	14, // 1: Homework.CreateHomeworkRequest.homework:type_name -> Homework.Homework
	14, // 2: Homework.CreateHomeworkResponse.hw:type_name -> Homework.Homework
	14, // 3: Homework.UpdateHomeworkRequest.homework:type_name -> Homework.Homework
	14, // 4: Homework.UpdateHomeworkResponse.hw:type_name -> Homework.Homework
	17, // 5: Homework.SubmitHomeworkRequest.submission:type_name -> Homework.Submission
	17, // 6: Homework.SubmitHomeworkResponse.submission:type_name -> Homework.Submission
	17, // 7: Homework.GetSubmissionsResponse.submissions:type_name -> Homework.Submission
	17, // 8: Homework.GetStudentSubmissionsResponse.submissions:type_name -> Homework.Submission
	15, // 9: Homework.Homework.files:type_name -> Homework.File
	17, // 10: Homework.Homework.submissions:type_name -> Homework.Submission
	15, // 11: Homework.Submission.submissionFile:type_name -> Homework.File
	0,  // 12: Homework.HomeworkService.GetHomework:input_type -> Homework.GetHomeworkRequest
	2,  // 13: Homework.HomeworkService.CreateHomework:input_type -> Homework.CreateHomeworkRequest
	4,  // 14: Homework.HomeworkService.UpdateHomework:input_type -> Homework.UpdateHomeworkRequest
	6,  // 15: Homework.HomeworkService.DeleteHomework:input_type -> Homework.DeleteHomeworkRequest
	1,  // 16: Homework.HomeworkService.GetHomework:output_type -> Homework.GetHomeworkResponse
	3,  // 17: Homework.HomeworkService.CreateHomework:output_type -> Homework.CreateHomeworkResponse
	5,  // 18: Homework.HomeworkService.UpdateHomework:output_type -> Homework.UpdateHomeworkResponse
	7,  // 19: Homework.HomeworkService.DeleteHomework:output_type -> Homework.DeleteHomeworkResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_homework_microservice_proto_init() }
func file_homework_microservice_proto_init() {
	if File_homework_microservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_homework_microservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_homework_microservice_proto_goTypes,
		DependencyIndexes: file_homework_microservice_proto_depIdxs,
		MessageInfos:      file_homework_microservice_proto_msgTypes,
	}.Build()
	File_homework_microservice_proto = out.File
	file_homework_microservice_proto_rawDesc = nil
	file_homework_microservice_proto_goTypes = nil
	file_homework_microservice_proto_depIdxs = nil
}
